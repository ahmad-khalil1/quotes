{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadkhalil/Desktop/D/programing/FrontEnd Development/React/11-reactRouter/reactRouter2/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const {\n    path,\n    url,\n    params\n  } = useRouteMatch();\n  console.log(useRouteMatch());\n  const DUMMY_QUOTES = [{\n    id: \"q1\",\n    author: \"Max\",\n    text: \"Learning React is fun!\"\n  }, {\n    id: \"q2\",\n    author: \"Maximilian\",\n    text: \"Learning React is great!\"\n  }];\n  const selectedQuote = DUMMY_QUOTES.find(quote => params.quoteId === quote.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: selectedQuote.text,\n      author: selectedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteDetail, \"5lGYnok0hqTeqMuR+at5X/v2a2A=\", false, function () {\n  return [useRouteMatch, useRouteMatch];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/ahmadkhalil/Desktop/D/programing/FrontEnd Development/React/11-reactRouter/reactRouter2/src/pages/QuoteDetail.js"],"names":["useParams","Route","useRouteMatch","Comments","HighlightedQuote","QuoteDetail","path","url","params","console","log","DUMMY_QUOTES","id","author","text","selectedQuote","find","quote","quoteId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAwBN,aAAa,EAA3C;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYR,aAAa,EAAzB;AAEA,QAAMS,YAAY,GAAG,CACnB;AAAEC,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,MAAM,EAAE,KAApB;AAA2BC,IAAAA,IAAI,EAAE;AAAjC,GADmB,EAEnB;AAAEF,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,MAAM,EAAE,YAApB;AAAkCC,IAAAA,IAAI,EAAE;AAAxC,GAFmB,CAArB;AAIA,QAAMC,aAAa,GAAGJ,YAAY,CAACK,IAAb,CAAkBC,KAAK,IAAIT,MAAM,CAACU,OAAP,KAAmBD,KAAK,CAACL,EAApD,CAAtB;AACA,sBACE;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEG,aAAa,CAACD,IADtB;AAEE,MAAA,MAAM,EAAEC,aAAa,CAACF;AAFxB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEP,IAAK,WAArB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAYD,CArBD;;GAAMD,W;UAC0BH,a,EAClBA,a;;;KAFRG,W;AAuBN,eAAeA,WAAf","sourcesContent":["import { useParams, Route, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nconst QuoteDetail = () => {\n  const { path, url, params } = useRouteMatch();\n  console.log(useRouteMatch());\n\n  const DUMMY_QUOTES = [\n    { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\n    { id: \"q2\", author: \"Maximilian\", text: \"Learning React is great!\" },\n  ];\n  const selectedQuote = DUMMY_QUOTES.find(quote => params.quoteId === quote.id);\n  return (\n    <>\n      <HighlightedQuote\n        text={selectedQuote.text}\n        author={selectedQuote.author}\n      />\n      {/* <p>{`QuoteDetail page  ${params.quoteId}`} </p> */}\n      <Route path={`${path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}