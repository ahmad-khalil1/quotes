{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadkhalil/Desktop/D/programing/FrontEnd Development/React/11-reactRouter/reactRouter2/src/components/comments/Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../api/api\";\nimport useHttp from \"../../hooks/useHttp\";\nimport LoadingSpinner from \"../UI/ LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const {\n    sendRequest,\n    data: loadedComments,\n    status,\n    error\n  } = useHttp(getAllComments);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const {\n    quoteId\n  } = params;\n\n  const addedCommentsHandler = _ => {};\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerd\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centerd focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: params.quoteId,\n      onAddedComments: addedCommentsHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"/GQm4izRBwwZexNI1ySCLc7Ph28=\", false, function () {\n  return [useHttp, useParams];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/ahmadkhalil/Desktop/D/programing/FrontEnd Development/React/11-reactRouter/reactRouter2/src/components/comments/Comments.js"],"names":["useState","useEffect","useParams","classes","NewCommentForm","getAllComments","useHttp","LoadingSpinner","Comments","sendRequest","data","loadedComments","status","error","isAddingComment","setIsAddingComment","params","startAddCommentHandler","quoteId","addedCommentsHandler","_","loadedQuotes","length","comments"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,IAAI,EAAEC,cAArB;AAAqCC,IAAAA,MAArC;AAA6CC,IAAAA;AAA7C,MAAuDP,OAAO,CAClED,cADkE,CAApE;AAGA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAMgB,MAAM,GAAGd,SAAS,EAAxB;;AACA,QAAMe,sBAAsB,GAAG,MAAM;AACnCF,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAIA,QAAM;AAAEG,IAAAA;AAAF,MAAcF,MAApB;;AACA,QAAMG,oBAAoB,GAAGC,CAAC,IAAI,CAAE,CAApC;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,WAAW,CAACS,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,EAAUT,WAAV,CAFM,CAAT;;AAIA,MAAIG,MAAM,KAAK,SAAf,EAA0B;AACxB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIC,KAAJ,EAAW;AACT,wBAAO;AAAG,MAAA,SAAS,EAAC,iBAAb;AAAA,gBAAgCA;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAID,MAAM,KAAK,WAAX,KAA2B,CAACS,YAAD,IAAiBA,YAAY,CAACC,MAAb,KAAwB,CAApE,CAAJ,EAA4E;AAC1E,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAS,IAAA,SAAS,EAAEnB,OAAO,CAACoB,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACT,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEG,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGH,eAAe,iBACd,QAAC,cAAD;AACE,MAAA,OAAO,EAAEE,MAAM,CAACE,OADlB;AAEE,MAAA,eAAe,EAAEC;AAFnB;AAAA;AAAA;AAAA;AAAA,YARJ,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhDD;;GAAMX,Q;UACyDF,O,EAI9CJ,S;;;KALXM,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport { getAllComments } from \"../../api/api\";\nimport useHttp from \"../../hooks/useHttp\";\nimport LoadingSpinner from \"../UI/ LoadingSpinner\";\nconst Comments = () => {\n  const { sendRequest, data: loadedComments, status, error } = useHttp(\n    getAllComments\n  );\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const { quoteId } = params;\n  const addedCommentsHandler = _ => {};\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className='centerd'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centerd focused'>{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComments={addedCommentsHandler}\n        />\n      )}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}