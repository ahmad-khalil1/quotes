{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadkhalil/Desktop/D/programing/FrontEnd Development/React/11-reactRouter/reactRouter2/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route, useRouteMatch, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/useHttp\";\nimport { getSingleQuote } from \"../api/api\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const {\n    path,\n    url,\n    params\n  } = useRouteMatch();\n  const {\n    sendRequest,\n    data,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest]);\n  const quote = DUMMY_QUOTES.find(quote => params.quoteId === quote.id);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuoteDetail, \"ABqv40+QK+WuX968uT8wlGGqXbQ=\", false, function () {\n  return [useRouteMatch, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/ahmadkhalil/Desktop/D/programing/FrontEnd Development/React/11-reactRouter/reactRouter2/src/pages/QuoteDetail.js"],"names":["useParams","Route","useRouteMatch","Link","Comments","HighlightedQuote","useHttp","getSingleQuote","useEffect","QuoteDetail","path","url","params","sendRequest","data","error","quoteId","quote","DUMMY_QUOTES","find","id","text","author"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,aAA3B,EAA0CC,IAA1C,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,GAAR;AAAaC,IAAAA;AAAb,MAAwBV,aAAa,EAA3C;AACA,QAAM;AAAEW,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,MAA+BT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,WAAW,CAACD,MAAM,CAACI,OAAR,CAAX;AACD,GAFQ,EAEN,CAACH,WAAD,CAFM,CAAT;AAIA,QAAMI,KAAK,GAAGC,YAAY,CAACC,IAAb,CAAkBF,KAAK,IAAIL,MAAM,CAACI,OAAP,KAAmBC,KAAK,CAACG,EAApD,CAAd;;AACA,MAAI,CAACH,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACI,IAA9B;AAAoC,MAAA,MAAM,EAAEJ,KAAK,CAACK;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEZ,IAAb;AAAmB,MAAA,KAAK,MAAxB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEC,GAAI,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,IAAK,WAArB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAeD,CA3BD;;GAAMD,W;UAC0BP,a,EACOI,O;;;KAFjCG,W;AA6BN,eAAeA,WAAf","sourcesContent":["import { useParams, Route, useRouteMatch, Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport useHttp from \"../hooks/useHttp\";\nimport { getSingleQuote } from \"../api/api\";\nimport { useEffect } from \"react\";\nconst QuoteDetail = () => {\n  const { path, url, params } = useRouteMatch();\n  const { sendRequest, data, error } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(params.quoteId);\n  }, [sendRequest]);\n\n  const quote = DUMMY_QUOTES.find(quote => params.quoteId === quote.id);\n  if (!quote) {\n    return <p>No quote found!</p>;\n  }\n  return (\n    <>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      <Route path={path} exact>\n        <div className='centered'>\n          <Link className='btn--flat' to={`${url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${path}/comments`}>\n        <Comments />\n      </Route>\n    </>\n  );\n};\n\nexport default QuoteDetail;\n"]},"metadata":{},"sourceType":"module"}